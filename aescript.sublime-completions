
/*
SublimeText2 completionFile for After Effects Scripting

author yoshioka.hiroo
*/


{
    "scope": "source.js -string -comment -constant",

    "completions":
    [


{ "trigger": "app", "contents": "app" },

{ "trigger": "activate()", "contents": "activate()" },
{ "trigger": "active", "contents": "active" },
{ "trigger": "activeAtTime()", "contents": "activeAtTime(${1:time float})" },
{ "trigger": "activeCamera", "contents": "activeCamera" },
{ "trigger": "activeItem", "contents": "activeItem" },
{ "trigger": "activeViewer", "contents": "activeViewer" },
//{ "trigger": "add()", "contents": "add(${1:comp CompItem})" },
{ "trigger": "add()", "contents": "add(${1:item FootageItem}, ${2:{duration float}})" },
{ "trigger": "addBoxText()", "contents": "addBoxText(${1:{sourceText string}})" },
{ "trigger": "addCamera()", "contents": "addCamera(${1:name string}, ${2:centerPoint float})" },
{ "trigger": "addComp()", "contents": "addComp(${1:name string}, ${2:width integer}, ${3:height integer}, ${4:pixelAspect float}, ${5:frameRate float}, ${6:duration float})" },
{ "trigger": "addFolder()", "contents": "addFolder(${1:name string})" },
{ "trigger": "addKey()", "contents": "addKey(${1:time float})" },
{ "trigger": "addLight()", "contents": "addLight(${1:name string}, ${2:centerPoint float})" },
{ "trigger": "addNull()", "contents": "addNull(${1:{duration float}})" },
{ "trigger": "addProperty()", "contents": "addProperty(${1:name string})" },
{ "trigger": "addShape()", "contents": "addShape()" },
{ "trigger": "addSolid()", "contents": "addSolid(${1:color array}, ${2:name string}, ${3:width integer}, ${4:height integer}, ${5:pixelAspect float}, ${6:duration float})" },
{ "trigger": "addText()", "contents": "addText(${1:{sourceText string}})" },
{ "trigger": "adjustmentLayer", "contents": "adjustmentLayer" },
{ "trigger": "alphaMode", "contents": "alphaMode" },
{ "trigger": "applyFill", "contents": "applyFill" },
{ "trigger": "applyPreset()", "contents": "applyPreset(${1:File file})" },
{ "trigger": "applyStroke", "contents": "applyStroke" },
{ "trigger": "applyTemplate()", "contents": "applyTemplate(${1:templateName string})" },
{ "trigger": "audioActive", "contents": "audioActive" },
{ "trigger": "audioActiveAtTime()", "contents": "audioActiveAtTime(${1:Time time})" },
{ "trigger": "audioEnabled", "contents": "audioEnabled" },
{ "trigger": "autoFixExpressions()", "contents": "autoFixExpressions(${1:oldText text}, ${2:newText text})" },
{ "trigger": "autoOrient", "contents": "autoOrient" },
{ "trigger": "beginSuppressDialogs()", "contents": "beginSuppressDialogs()" },
{ "trigger": "beginUndoGroup()", "contents": "beginUndoGroup(${1:undoString string})" },
{ "trigger": "bgColor", "contents": "bgColor" },
{ "trigger": "bitsPerChannel", "contents": "bitsPerChannel" },
{ "trigger": "blendingMode", "contents": "blendingMode" },
{ "trigger": "boxText", "contents": "boxText" },
{ "trigger": "boxTextSize", "contents": "boxTextSize" },
{ "trigger": "buildName", "contents": "buildName" },
{ "trigger": "buildNumber", "contents": "buildNumber" },
{ "trigger": "byName()", "contents": "byName(${1:name string})" },
{ "trigger": "calculateTransformFromPoints()", "contents": "calculateTransformFromPoints(${1:pointTopLeft array}, ${2:pointTopRight array}, ${3:positionBottomRight array})" },
{ "trigger": "callSystem()", "contents": "callSystem(${1:cmdLineToExecute cmd})" },
{ "trigger": "canAddProperty()", "contents": "canAddProperty(${1:name string})" },
{ "trigger": "cancelTask()", "contents": "cancelTask(${1:taskID integer})" },
{ "trigger": "canImportAs()", "contents": "canImportAs(${1:Type ImportAsType })" },
{ "trigger": "canSetCollapseTransformation", "contents": "canSetCollapseTransformation" },
{ "trigger": "canSetEnabled", "contents": "canSetEnabled" },
{ "trigger": "canSetExpression", "contents": "canSetExpression" },
{ "trigger": "canSetTimeRemapEnabled", "contents": "canSetTimeRemapEnabled" },
{ "trigger": "canVaryOverTime", "contents": "canVaryOverTime" },
{ "trigger": "chapter", "contents": "chapter" },
{ "trigger": "clearOutput()", "contents": "clearOutput()" },
{ "trigger": "close()", "contents": "close(${1:CloseOptions})" },
{ "trigger": "closed", "contents": "closed" },
{ "trigger": "collapseTransformation", "contents": "collapseTransformation" },
{ "trigger": "color", "contents": "color" },
{ "trigger": "comment", "contents": "comment" },
{ "trigger": "comp", "contents": "comp" },
{ "trigger": "conformFrameRate", "contents": "conformFrameRate" },
{ "trigger": "consolidateFootage()", "contents": "consolidateFootage()" },
{ "trigger": "containingComp", "contents": "containingComp" },
{ "trigger": "copyToComp()", "contents": "copyToComp(${1:CompItem})" },
{ "trigger": "cuePointName", "contents": "cuePointName" },
{ "trigger": "currentFormatToTime()", "contents": "currentFormatToTime(${1:formattedTime float}, ${2:fps float}, ${3:isDuration bool})" },
{ "trigger": "deviceCentralImporter()", "contents": "deviceCentralImporter(${1:jsonString string})" },
{ "trigger": "dimensionsSeparated", "contents": "dimensionsSeparated" },
{ "trigger": "displayFrameRate", "contents": "displayFrameRate" },
{ "trigger": "displayStartFrame", "contents": "displayStartFrame" },
{ "trigger": "displayStartTime", "contents": "displayStartTime" },
{ "trigger": "draft3d", "contents": "draft3d" },
{ "trigger": "dropFrame", "contents": "dropFrame" },
{ "trigger": "duplicate()", "contents": "duplicate()" },
{ "trigger": "duration", "contents": "duration" },
{ "trigger": "effects", "contents": "effects" },
{ "trigger": "effectsActive", "contents": "effectsActive" },
{ "trigger": "elapsedSeconds", "contents": "elapsedSeconds" },
{ "trigger": "elided", "contents": "elided" },
{ "trigger": "enabled", "contents": "enabled" },
{ "trigger": "endSuppressDialogs()", "contents": "endSuppressDialogs(${1:bool})" },
{ "trigger": "endUndoGroup()", "contents": "endUndoGroup()" },
{ "trigger": "endWatchFolder()", "contents": "endWatchFolder()" },
{ "trigger": "environmentLayer", "contents": "environmentLayer" },
{ "trigger": "eventCuePoint", "contents": "eventCuePoint" },
{ "trigger": "executeCommand()", "contents": "executeCommand(${1:commandID integer})" },
{ "trigger": "exitAfterLaunchAndEval", "contents": "exitAfterLaunchAndEval" },
{ "trigger": "exitCode", "contents": "exitCode" },
{ "trigger": "expression", "contents": "expression" },
{ "trigger": "expressionEnabled", "contents": "expressionEnabled" },
{ "trigger": "expressionError", "contents": "expressionError" },
{ "trigger": "featherInterps", "contents": "featherInterps" },
{ "trigger": "featherRadii", "contents": "featherRadii" },
{ "trigger": "featherRelCornerAngles", "contents": "featherRelCornerAngles" },
{ "trigger": "featherRelSegLocs", "contents": "featherRelSegLocs" },
{ "trigger": "featherSegLocs", "contents": "featherSegLocs" },
{ "trigger": "featherTensions", "contents": "featherTensions" },
{ "trigger": "featherTypes", "contents": "featherTypes" },
{ "trigger": "feetFramesFilmType", "contents": "feetFramesFilmType" },
{ "trigger": "fieldSeparationType", "contents": "fieldSeparationType" },
{ "trigger": "file", "contents": "file" },
{ "trigger": "fillColor", "contents": "fillColor" },
{ "trigger": "findMenuCommandId()", "contents": "findMenuCommandId(${1:menuString string})" },
{ "trigger": "font", "contents": "font" },
{ "trigger": "fontSize", "contents": "fontSize" },
{ "trigger": "footageMissing", "contents": "footageMissing" },
{ "trigger": "footageTimecodeDisplayStartType", "contents": "footageTimecodeDisplayStartType" },
{ "trigger": "forceAlphabetical", "contents": "forceAlphabetical" },
{ "trigger": "frameBlending", "contents": "frameBlending" },
{ "trigger": "frameBlendingType", "contents": "frameBlendingType" },
{ "trigger": "frameDuration", "contents": "frameDuration" },
{ "trigger": "frameRate", "contents": "frameRate" },
{ "trigger": "framesCountType", "contents": "framesCountType" },
{ "trigger": "framesUseFeetFrames", "contents": "framesUseFeetFrames" },
{ "trigger": "frameTarget", "contents": "frameTarget" },
{ "trigger": "getParameters()", "contents": "getParameters()" },
{ "trigger": "getSeparationFollower()", "contents": "getSeparationFollower(${1:dim integer})" },
{ "trigger": "getSetting()", "contents": "getSetting(${1:sectionName string}, ${2:keyName string})" },
{ "trigger": "guessAlphaMode()", "contents": "guessAlphaMode()" },
{ "trigger": "guessPulldown()", "contents": "guessPulldown(${1:Type PulldownMethod})" },
{ "trigger": "guideLayer", "contents": "guideLayer" },
{ "trigger": "hasAlpha", "contents": "hasAlpha" },
{ "trigger": "hasAudio", "contents": "hasAudio" },
{ "trigger": "hasMax", "contents": "hasMax" },
{ "trigger": "hasMin", "contents": "hasMin" },
{ "trigger": "hasTrackMatte", "contents": "hasTrackMatte" },
{ "trigger": "hasVideo", "contents": "hasVideo" },
{ "trigger": "haveSetting()", "contents": "haveSetting(${1:sectionName string}, ${2:keyName string})" },
{ "trigger": "height", "contents": "height" },
{ "trigger": "hideShyLayers", "contents": "hideShyLayers" },
{ "trigger": "highQualityFieldSeparation", "contents": "highQualityFieldSeparation" },
{ "trigger": "id", "contents": "id" },
{ "trigger": "importAs", "contents": "importAs" },
{ "trigger": "importFile()", "contents": "importFile(${1:ImportOptions })" },
{ "trigger": "importFileWithDialog()", "contents": "importFileWithDialog()" },
{ "trigger": "importPlaceholder()", "contents": "importPlaceholder()" },
{ "trigger": "includeSourceXMP", "contents": "includeSourceXMP" },
{ "trigger": "index", "contents": "index" },
{ "trigger": "injectPresetAnimation()", "contents": "injectPresetAnimation(${1:GIF file}, ${2:JPEG file}, ${3:FFX file})" },
{ "trigger": "inPoint", "contents": "inPoint" },
{ "trigger": "inTangents", "contents": "inTangents" },
{ "trigger": "invertAlpha", "contents": "invertAlpha" },
{ "trigger": "inverted", "contents": "inverted" },
{ "trigger": "isEffect", "contents": "isEffect" },
{ "trigger": "isInterpolationTypeValid()", "contents": "isInterpolationTypeValid(${1:Type KeyframeInterpolationType})" },
{ "trigger": "isMask", "contents": "isMask" },
{ "trigger": "isModified", "contents": "isModified" },
{ "trigger": "isNameFromSource", "contents": "isNameFromSource" },
{ "trigger": "isNameSet", "contents": "isNameSet" },
{ "trigger": "isoLanguage", "contents": "isoLanguage" },
{ "trigger": "isRenderEngine", "contents": "isRenderEngine" },
{ "trigger": "isSeparationFollower", "contents": "isSeparationFollower" },
{ "trigger": "isSeparationLeader", "contents": "isSeparationLeader" },
{ "trigger": "isSpatial", "contents": "isSpatial" },
{ "trigger": "isStill", "contents": "isStill" },
{ "trigger": "isTimeVarying", "contents": "isTimeVarying" },
{ "trigger": "isTrackMatte", "contents": "isTrackMatte" },
{ "trigger": "isValid()", "contents": "isValid(${1:object})" },
{ "trigger": "isWatchFolder", "contents": "isWatchFolder" },
{ "trigger": "item()", "contents": "item(${1:index integer})" },
{ "trigger": "items", "contents": "items" },
{ "trigger": "justification", "contents": "justification" },
{ "trigger": "keyInInterpolationType()", "contents": "keyInInterpolationType(${1:keyIndex integer})" },
{ "trigger": "keyInSpatialTangent()", "contents": "keyInSpatialTangent(${1:keyIndex integer})" },
{ "trigger": "keyInTemporalEase()", "contents": "keyInTemporalEase(${1:keyIndex integer})" },
{ "trigger": "keyOutInterpolationType()", "contents": "keyOutInterpolationType(${1:keyIndex integer})" },
{ "trigger": "keyOutSpatialTangent()", "contents": "keyOutSpatialTangent(${1:keyIndex integer})" },
{ "trigger": "keyOutTemporalEase()", "contents": "keyOutTemporalEase(${1:keyIndex integer})" },
{ "trigger": "keyRoving()", "contents": "keyRoving(${1:keyIndex integer})" },
{ "trigger": "keySelected()", "contents": "keySelected(${1:keyIndex integer})" },
{ "trigger": "keySpatialAutoBezier()", "contents": "keySpatialAutoBezier(${1:keyIndex integer})" },
{ "trigger": "keySpatialContinuous()", "contents": "keySpatialContinuous(${1:keyIndex integer})" },
{ "trigger": "keyTemporalAutoBezier()", "contents": "keyTemporalAutoBezier(${1:keyIndex integer})" },
{ "trigger": "keyTemporalContinuous()", "contents": "keyTemporalContinuous(${1:keyIndex integer})" },
{ "trigger": "keyTime()", "contents": "keyTime(${1:keyIndex integer or markerComment string})" },
{ "trigger": "keyValue()", "contents": "keyValue(${1:keyIndex integer or markerComment string})" },
{ "trigger": "label", "contents": "label" },
{ "trigger": "language", "contents": "language" },
{ "trigger": "layer()", "contents": "layer(${1:index integer})" },
{ "trigger": "layers", "contents": "layers" },
{ "trigger": "lightType", "contents": "lightType" },
{ "trigger": "linearBlending", "contents": "linearBlending" },
{ "trigger": "locked", "contents": "locked" },
{ "trigger": "logType", "contents": "logType" },
{ "trigger": "loop", "contents": "loop" },
{ "trigger": "machineName", "contents": "machineName" },
{ "trigger": "mainSource", "contents": "mainSource" },
{ "trigger": "maskFeatherFalloff", "contents": "maskFeatherFalloff" },
{ "trigger": "maskMode", "contents": "maskMode" },
{ "trigger": "maskMotionBlur", "contents": "maskMotionBlur" },
{ "trigger": "matchName", "contents": "matchName" },
{ "trigger": "maximized", "contents": "maximized" },
{ "trigger": "maxValue", "contents": "maxValue" },
{ "trigger": "memoryInUse", "contents": "memoryInUse" },
{ "trigger": "minValue", "contents": "minValue" },
{ "trigger": "missingFootagePath", "contents": "missingFootagePath" },
{ "trigger": "motionBlur", "contents": "motionBlur" },
{ "trigger": "motionBlurAdaptiveSampleLimit", "contents": "motionBlurAdaptiveSampleLimit" },
{ "trigger": "motionBlurSamplesPerFrame", "contents": "motionBlurSamplesPerFrame" },
{ "trigger": "moveAfter()", "contents": "moveAfter(${1:Layer})" },
{ "trigger": "moveBefore()", "contents": "moveBefore(${1:Layer})" },
{ "trigger": "moveTo()", "contents": "moveTo(${1:newIndex integer})" },
{ "trigger": "moveToBeginning()", "contents": "moveToBeginning()" },
{ "trigger": "moveToEnd()", "contents": "moveToEnd()" },
{ "trigger": "name", "contents": "name" },
{ "trigger": "nativeFrameRate", "contents": "nativeFrameRate" },
{ "trigger": "nearestKeyIndex()", "contents": "nearestKeyIndex(${1:keyIndex integer}, ${2:newValue value })" },
{ "trigger": "newProject()", "contents": "newProject()" },
{ "trigger": "nullLayer", "contents": "nullLayer" },
{ "trigger": "numItems", "contents": "numItems" },
{ "trigger": "numKeys", "contents": "numKeys" },
{ "trigger": "numLayers", "contents": "numLayers" },
{ "trigger": "numOutputModules", "contents": "numOutputModules" },
{ "trigger": "numProperties", "contents": "numProperties" },
{ "trigger": "onError", "contents": "onError" },
{ "trigger": "onStatusChanged", "contents": "onStatusChanged" },
{ "trigger": "open()", "contents": "open(${1:File file})" },
{ "trigger": "openFast()", "contents": "openFast(${1:File file})" },
{ "trigger": "openInViewer()", "contents": "openInViewer()" },
{ "trigger": "openTemplate()", "contents": "openTemplate(${1:File file})" },
{ "trigger": "osName", "contents": "osName" },
{ "trigger": "osVersion", "contents": "osVersion" },
{ "trigger": "outPoint", "contents": "outPoint" },
{ "trigger": "outputModule()", "contents": "outputModule(${1:index integer})" },
{ "trigger": "outputModules", "contents": "outputModules" },
{ "trigger": "outTangents", "contents": "outTangents" },
{ "trigger": "parent", "contents": "parent" },
{ "trigger": "parentFolder", "contents": "parentFolder" },
{ "trigger": "parentProperty", "contents": "parentProperty" },
{ "trigger": "parseSwatchFile()", "contents": "parseSwatchFile(${1:File file})" },
{ "trigger": "pauseRendering()", "contents": "pauseRendering(${1:bool})" },
{ "trigger": "pauseWatchFolder()", "contents": "pauseWatchFolder(${1:bool})" },
{ "trigger": "pixelAspect", "contents": "pixelAspect" },
{ "trigger": "pointText", "contents": "pointText" },
{ "trigger": "postRenderAction", "contents": "postRenderAction" },
{ "trigger": "precompose()", "contents": "precompose(${1:layerIndicies array}, ${2:name string}, ${3:{moveAllAttributes bool}})" },
{ "trigger": "premulColor", "contents": "premulColor" },
{ "trigger": "preserveNestedFrameRate", "contents": "preserveNestedFrameRate" },
{ "trigger": "preserveNestedResolution", "contents": "preserveNestedResolution" },
{ "trigger": "preserveTransparency", "contents": "preserveTransparency" },
{ "trigger": "project", "contents": "project" },
{ "trigger": "property()", "contents": "property(${1:index integer or name string})" },
{ "trigger": "propertyDepth", "contents": "propertyDepth" },
{ "trigger": "propertyGroup()", "contents": "propertyGroup(${1:{countUp integer}})" },
{ "trigger": "propertyIndex", "contents": "propertyIndex" },
{ "trigger": "propertyType", "contents": "propertyType" },
{ "trigger": "propertyValueType", "contents": "propertyValueType" },
{ "trigger": "proxySource", "contents": "proxySource" },
{ "trigger": "purge()", "contents": "purge(${1:Type PurgeTarget})" },
{ "trigger": "quality", "contents": "quality" },
{ "trigger": "quit()", "contents": "quit()" },
{ "trigger": "ramPreviewTest()", "contents": "ramPreviewTest(${1:unknown}, ${2:viewScale float}, ${3:exposure float})" },
{ "trigger": "reduceProject()", "contents": "reduceProject(${1:Items array})" },
{ "trigger": "reload()", "contents": "reload()" },
{ "trigger": "remove()", "contents": "remove()" },
{ "trigger": "removeKey()", "contents": "removeKey(${1:keyIndex integer})" },
{ "trigger": "removePulldown", "contents": "removePulldown" },
{ "trigger": "removeUnusedFootage()", "contents": "removeUnusedFootage()" },
{ "trigger": "render", "contents": "render" },
{ "trigger": "render()", "contents": "render()" },
{ "trigger": "renderer", "contents": "renderer" },
{ "trigger": "renderers", "contents": "renderers" },
{ "trigger": "rendering", "contents": "rendering" },
{ "trigger": "renderQueue", "contents": "renderQueue" },
{ "trigger": "replace()", "contents": "replace(${1:File file})" },
{ "trigger": "replaceSource()", "contents": "replaceSource(${1:newSource AVItem}, ${2:fixExpressions bool})" },
{ "trigger": "replaceWithPlaceholder()", "contents": "replaceWithPlaceholder(${1:name string}, ${2:width integer}, ${3:height integer}, ${4:frameRate float}, ${5:duration float})" },
{ "trigger": "replaceWithSequence()", "contents": "replaceWithSequence(${1:File file}, ${2:forceAlphabetical bool})" },
{ "trigger": "replaceWithSolid()", "contents": "replaceWithSolid(${1:color array}, ${2:name string}, ${3:width integer}, ${4:height integer}, ${5:pixelAspect float})" },
{ "trigger": "reportErrorOnMissingFrame", "contents": "reportErrorOnMissingFrame" },
{ "trigger": "resetCharStyle()", "contents": "resetCharStyle()" },
{ "trigger": "resetParagraphStyle()", "contents": "resetParagraphStyle()" },
{ "trigger": "resolutionFactor", "contents": "resolutionFactor" },
{ "trigger": "rootFolder", "contents": "rootFolder" },
{ "trigger": "rotoBezier", "contents": "rotoBezier" },
{ "trigger": "save()", "contents": "save(${1:File file})" },
{ "trigger": "saveAsTemplate()", "contents": "saveAsTemplate(${1:name string})" },
{ "trigger": "saveFrameToPng()", "contents": "saveFrameToPng(${1:time float}, ${2:fps float}, ${3:isDuration bool})" },
{ "trigger": "saveProjectOnCrash", "contents": "saveProjectOnCrash" },
{ "trigger": "saveSetting()", "contents": "saveSetting(${1:sectionName string}, ${2:keyName string}, ${3:value string})" },
{ "trigger": "saveWithDialog()", "contents": "saveWithDialog()" },
{ "trigger": "scheduleTask()", "contents": "scheduleTask(${1:stringToExecute string}, ${2:delay float}, ${3:repeat bool })" },
{ "trigger": "selected", "contents": "selected" },
{ "trigger": "selectedKeys", "contents": "selectedKeys" },
{ "trigger": "selectedLayers", "contents": "selectedLayers" },
{ "trigger": "selectedProperties", "contents": "selectedProperties" },
{ "trigger": "selection", "contents": "selection" },
{ "trigger": "separationDimension", "contents": "separationDimension" },
{ "trigger": "separationLeader", "contents": "separationLeader" },
{ "trigger": "sequence", "contents": "sequence" },
{ "trigger": "setActive()", "contents": "setActive(${1:Type ViewerType})" },
{ "trigger": "setInterpolationTypeAtKey()", "contents": "setInterpolationTypeAtKey(${1:keyIndex integer}, ${2:inType KeyframeInterpolationType}, ${3:outType KeyframeInterpolationType})" },
{ "trigger": "setMemoryUsageLimits()", "contents": "setMemoryUsageLimits(${1:imageCachePercentage float}, ${2:maximumMemoryPercentage float })" },
{ "trigger": "setParameters()", "contents": "setParameters(${1:keyValuePairs object})" },
{ "trigger": "setParentWithJump()", "contents": "setParentWithJump(${1:Layer})" },
{ "trigger": "setProxy()", "contents": "setProxy(${1:File file})" },
{ "trigger": "setProxyToNone()", "contents": "setProxyToNone()" },
{ "trigger": "setProxyWithPlaceholder()", "contents": "setProxyWithPlaceholder(${1:name string}, ${2:width integer}, ${3:height integer}, ${4:frameRate float}, ${5:duration float})" },
{ "trigger": "setProxyWithSequence()", "contents": "setProxyWithSequence(${1:File file}, ${2:forceAlphabetical bool})" },
{ "trigger": "setProxyWithSolid()", "contents": "setProxyWithSolid(${1:color array}, ${2:name string}, ${3:width integer}, ${4:height integer}, ${5:pixelAspect float})" },
{ "trigger": "setRovingAtKey()", "contents": "setRovingAtKey(${1:keyIndex integer}, ${2:newValue bool})" },
{ "trigger": "setSavePreferencesOnQuit()", "contents": "setSavePreferencesOnQuit(${1:doSave bool})" },
{ "trigger": "setSelectedAtKey()", "contents": "setSelectedAtKey(${1:keyIndex integer}, ${2:newValue bool})" },
{ "trigger": "setSpatialAutoBezierAtKey", "contents": "setSpatialAutoBezierAtKey)" },
{ "trigger": "setSpatialContinuousAtKey()", "contents": "setSpatialContinuousAtKey(${1:keyIndex integer}, ${2:newValue bool})" },
{ "trigger": "setSpatialTangentsAtKey()", "contents": "setSpatialTangentsAtKey(${1:keyIndex integer}, ${2:inType PropertyValueType}, ${3:outType PropertyValueType})" },
{ "trigger": "setTemporalAutoBezierAtKey()", "contents": "setTemporalAutoBezierAtKey(${1:keyIndex integer}, ${2:newValue bool})" },
{ "trigger": "setTemporalContinuousAtKey()", "contents": "setTemporalContinuousAtKey(${1:keyIndex integer}, ${2:newValue bool})" },
{ "trigger": "setTemporalEaseAtKey()", "contents": "setTemporalEaseAtKey(${1:keyIndex integer}, ${2:inType PropertyValueType}, ${3:outType PropertyValueType})" },
{ "trigger": "settings", "contents": "settings" },
{ "trigger": "setValue()", "contents": "setValue(${1:newValue value})" },
{ "trigger": "setValueAtKey()", "contents": "setValueAtKey(${1:keyIndex integer}, ${2:newValue value })" },
{ "trigger": "setValueAtTime()", "contents": "setValueAtTime(${1:time float}, ${2:newValue value })" },
{ "trigger": "setValuesAtTimes()", "contents": "setValuesAtTimes(${1:times array}, ${2:newValues array })" },
{ "trigger": "showWindow()", "contents": "showWindow(${1:bool})" },
{ "trigger": "shutterAngle", "contents": "shutterAngle" },
{ "trigger": "shutterPhase", "contents": "shutterPhase" },
{ "trigger": "shy", "contents": "shy" },
{ "trigger": "skipFrames", "contents": "skipFrames" },
{ "trigger": "solo", "contents": "solo" },
{ "trigger": "source", "contents": "source" },
{ "trigger": "sourceRectAtTime()", "contents": "sourceRectAtTime(${1:timeT float}, ${2:extents bool})" },
{ "trigger": "startTime", "contents": "startTime" },
{ "trigger": "status", "contents": "status" },
{ "trigger": "stopRendering()", "contents": "stopRendering()" },
{ "trigger": "stretch", "contents": "stretch" },
{ "trigger": "strokeColor", "contents": "strokeColor" },
{ "trigger": "strokeOverFill", "contents": "strokeOverFill" },
{ "trigger": "strokeWidth", "contents": "strokeWidth" },
{ "trigger": "templates", "contents": "templates" },
{ "trigger": "text", "contents": "text" },
{ "trigger": "themeColor()", "contents": "themeColor(${1:integer defaults as 0})" },
{ "trigger": "threeDLayer", "contents": "threeDLayer" },
{ "trigger": "threeDPerChar", "contents": "threeDPerChar" },
{ "trigger": "time", "contents": "time" },
{ "trigger": "timecodeBaseType()", "contents": "timecodeBaseType(${1:type TimecodeBaseType})" },
{ "trigger": "timecodeDisplayType()", "contents": "timecodeDisplayType(${1:type TimecodeDisplayType})" },
{ "trigger": "timecodeFilmType()", "contents": "timecodeFilmType(${1:type TimecodeFilmType})" },
{ "trigger": "timecodeNTSCDropFrame", "contents": "timecodeNTSCDropFrame" },
{ "trigger": "timeDisplayType", "contents": "timeDisplayType" },
{ "trigger": "timeRemapEnabled", "contents": "timeRemapEnabled" },
{ "trigger": "timeSpanDuration", "contents": "timeSpanDuration" },
{ "trigger": "timeSpanStart", "contents": "timeSpanStart" },
{ "trigger": "timeToCurrentFormat()", "contents": "timeToCurrentFormat(${1:time float}, ${2:fps float}, ${3:isDuration bool})" },
{ "trigger": "tracking", "contents": "tracking" },
{ "trigger": "trackMatteType", "contents": "trackMatteType" },
{ "trigger": "transparencyGridThumbnails", "contents": "transparencyGridThumbnails" },
{ "trigger": "type", "contents": "type" },
{ "trigger": "typeName", "contents": "typeName" },
{ "trigger": "undefinedactivate()", "contents": "undefinedactivate()" },
{ "trigger": "unitsText", "contents": "unitsText" },
{ "trigger": "url", "contents": "url" },
{ "trigger": "usedIn", "contents": "usedIn" },
{ "trigger": "useProxy", "contents": "useProxy" },
{ "trigger": "userName", "contents": "userName" },
{ "trigger": "value", "contents": "value" },
{ "trigger": "valueAtTime()", "contents": "valueAtTime(${1:time float}, ${2:preExpression bool})" },
{ "trigger": "version", "contents": "version" },
{ "trigger": "vertices", "contents": "vertices" },
{ "trigger": "watchFolder()", "contents": "watchFolder(${1:folder_object_to_watch folder})" },
{ "trigger": "width", "contents": "width" },
{ "trigger": "workAreaDuration", "contents": "workAreaDuration" },
{ "trigger": "workAreaStart", "contents": "workAreaStart" },
{ "trigger": "write()", "contents": "write(${1:text string})" },
{ "trigger": "writeLn()", "contents": "writeLn(${1:text string})" },
{ "trigger": "xmpPacket", "contents": "xmpPacket" }


    ]
}